#include <stdlib.h>

typedef struct _cptr {
    int size;
    void *ptr;
	void (*free)(void*);
} cptr;

#define val_cptr_size(cp) (((cptr*)val_data(cp))->size)
#define val_cptr(cp,type) ((type*)(((cptr*)val_data(cp))->ptr))
#define val_cptr_check_size(cp,type,s) if( val_cptr_size(cp)<s*sizeof(type) ) failure("cptr " #cp " is not large enough to hold " #s " " #type "s" );
