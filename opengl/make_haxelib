#!/bin/sh

function cfo() {
    if [ $? != 0 ]; then
        echo "-- Error on $1"
        exit $?
    else
        echo "++ Success on $1"    
    fi    
}

ID=opengl
NAMESPACES=$ID

if [ -e $ID.zip ]; then 
	rm $ID.zip
	cfo "removing previous zip package"
fi

if [ -e $ID ]; then	
	rm -R $ID
	cfo "removing previous package source tree"
fi

#root
mkdir $ID
cfo "creating source tree folder"
cp haxelib.xml $ID
cfo "copying haxelib xml config"

# haxe api
for NS in $NAMESPACES; do
	svn export api/$NS $ID/$NS
	cfo "exporting sources in $NS from local SVN checkout"
done

# ndlls
mkdir -p $ID/ndll/Linux
cfo "creating NDLL Linux folder"
cp bin/linux/$ID.ndll $ID/ndll/Linux/$ID.ndll
cfo "copying $ID.ndll for Linux"

mkdir -p $ID/ndll/Mac
cfo "creating NDLL Mac folder"
cp bin/mac/$ID.ndll $ID/ndll/Mac/$ID.ndll
cfo "copying $ID.ndll for Linux"

mkdir -p $ID/ndll/Windows
cfo "creating NDLL Mac folder"
cp bin/win/$ID.ndll $ID/ndll/Windows/$ID.ndll
cfo "copying $ID.ndll for Linux"

# neko modules
cp bin/$ID.n $ID/ndll/Linux/$ID.n
cfo "copying $ID.n"
cp bin/$ID.n $ID/ndll/Mac/$ID.n
cfo "copying $ID.n"
cp bin/$ID.n $ID/ndll/Windows/$ID.n
cfo "copying $ID.n"

# samples
svn export samples/ $ID/samples/
cfo "exporting samples from local SVN checkout"

# "haxelib run" demo
cd samples/1-*
haxe compile.hxml
cd ../..
cp samples/1-*/app.n $ID/run.n

zip -r $ID.zip $ID
cfo "zipping package $ID.zip"
